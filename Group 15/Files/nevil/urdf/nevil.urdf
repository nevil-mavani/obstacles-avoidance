<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot
  name="nevil">
  
  <link name="dummy_root_link"/>
  <joint name="fixed_joint_dummy_to_base" type="fixed">
    <parent link="dummy_root_link"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.001107 0.057697 -3.4568E-17"
        rpy="0 0 0" />
      <mass
        value="11.198" />
      <inertia
        ixx="0.099787"
        ixy="0.0014599"
        ixz="-1.1623E-17"
        iyy="0.17007"
        iyz="-3.1681E-18"
        izz="0.099885" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="left_link">
    <inertial>
      <origin
        xyz="-1.3878E-17 0 0.025"
        rpy="0 0 0" />
      <mass
        value="0.60379" />
      <inertia
        ixx="0.0010679"
        ixy="-1.3235E-20"
        ixz="7.031E-21"
        iyy="0.0010679"
        iyz="-1.8115E-20"
        izz="0.0018964" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/left_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/left_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="lj"
    type="continuous">
    <origin
      xyz="-0.115 -0.16 0.025"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="left_link" />
    <axis
      xyz="0 0 -1" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>
  <link
    name="right_link">
    <inertial>
      <origin
        xyz="-1.3878E-17 0 -0.025"
        rpy="0 0 0" />
      <mass
        value="0.60379" />
      <inertia
        ixx="0.0010679"
        ixy="-1.1994E-20"
        ixz="1.2408E-20"
        iyy="0.0010679"
        iyz="-1.7784E-20"
        izz="0.0018964" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/right_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/right_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="rj"
    type="continuous">
    <origin
      xyz="-0.115 0.16 0.025"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="right_link" />
    <axis
      xyz="0 0 -1" />
    <limit
      lower="0"
      upper="0"
      effort="0"
      velocity="0" />
  </joint>
  
  <link
    name="camera">
    <inertial>
      <origin
        xyz="0 0.014468 0"
        rpy="0 0 0" />
      <mass
        value="0.033216" />
      <inertia
        ixx="6.2425E-06"
        ixy="-3.9129E-22"
        ixz="-1.0609E-21"
        iyy="7.4037E-06"
        iyz="-4.9211E-22"
        izz="6.2425E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/camera.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/camera.STL" />
      </geometry>
    </collision>
  </link>
  
  <joint
    name="cj"
    type="fixed">
    <origin
      xyz="0.18 0.075 0.05"
      rpy="3.1416 0 -1.5708" />
    <parent
      link="base_link" />
    <child
      link="camera" />
    <axis
      xyz="0 0 0" />
  </joint> 
  <link
    name="imu">
    <inertial>
      <origin
        xyz="0 0.014468 -1.3878E-17"
        rpy="0 0 0" />
      <mass
        value="0.033216" />
      <inertia
        ixx="6.2425E-06"
        ixy="-7.2219E-23"
        ixz="-3.4131E-21"
        iyy="7.4037E-06"
        iyz="-1.4026E-22"
        izz="6.2425E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/imu.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://nevil/meshes/imu.STL" />
      </geometry>
    </collision>
  </link>
  <!--
  <joint
    name="ij"
    type="fixed">
    <origin
      xyz="0.18 -0.075 0.05"
      rpy="3.1416 0 -1.5708" />
    <parent
      link="base_link" />
    <child
      link="imu" />
    <axis
      xyz="0 0 0" />
  </joint> -->

  <!--camera sensor -->

  <link name="camera_link">
     <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0 0 0"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0 0 0"/>
      </geometry>
    </visual>
  </link>
  
  
  <joint name="camera_joint" type="fixed">
    <origin xyz="0.18 0.075 0.05" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

  
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!--IMU sensor-->  

  <joint name="ij" type="fixed">
    <parent link="base_link"/>
    <child link="imu"/>
    <origin xyz="0.18 -0.075 0.05" rpy="3.1416 0 -1.5708"/>
  </joint>

  <gazebo reference="imu">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

<!--Leser Sensor-->

  <joint name="laser_joint" type="fixed">
    <axis xyz="0 0 0" />
    <origin xyz="0 0 0.2" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="laser_link"/>
  </joint>

  <link name="laser_link">   
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0 0 0"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0 0 0"/>
      </geometry>
    </visual>
  </link>

  <gazebo reference="laser_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>LaserScan</topicName>
        <frameName>laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>  


  <!--Differtial Drive Plugin-->

  <gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>100</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>rj</leftJoint>

    <!-- Name ofrright joint, defaults to `right_joint` -->
    <rightJoint>lj</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.370</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.150</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>dummy_root_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <publishTf>true</publishTf>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <publishOdomTF>true</publishOdomTF>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>
<gazebo reference="left_link">
  <mu1>0.9</mu1>
  <mu2>0.9</mu2>
</gazebo>
<gazebo reference="right_link">
  <mu1>0.9</mu1>
  <mu2>0.9</mu2>
</gazebo>
<gazebo reference="base_link">
  <mu1>0.001</mu1>
  <mu2>0.001</mu2>
</gazebo>

</robot>